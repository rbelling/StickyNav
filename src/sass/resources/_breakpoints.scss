$grid-col-count: 12;
// Responsive breakpoints
$tiny_px: 479;
$narrow_px: 767;
$medium_px: 1023;
$wide_px: 1319;
$superwide_px: 1320;

$viewport-height: 1280;
$col_desktop: $superwide_px / $grid-col-count; // desktop column - width in pixels in the PSD

// Responsive utilities
@function vw($px, $targetviewport) {
	@return ($px * 100) / $targetviewport + vw;
}

@function span-cols($cols, $maxWidth: false) {
	@if $maxWidth {
		$width: $superwide_px;
		$retVal: (($width / $grid-col-count) * $cols);
		@return $retVal + px;
	}
	@else {
		$width: 100;
		$retVal: (($width / $grid-col-count) * $cols);
		@return $retVal + vw;
	}
}

@function h-pc($cols) {
	$width: 100;
	$retVal: (($width / $grid-col-count) * $cols);
	@return $retVal * 1%;
}

@function v-pc($px) {
	@return 100*1%*($px / $viewport-height);
}

/*----------  Rick's responsive calc function - watch out: http://caniuse.com/#feat=calc.   ----------*/
/**
 * Takes in a minimum and a maximum size in pixels, and interpolates between two viewports.
 * Takes in a property (e.g. font-size), min/max sizes, and optional lower range and upper range
 * by default it ranges from tablet to max width
 */
@mixin calc-value($property, $min-size, $max-size, $lower-range: $narrow_px, $upper-range: $superwide_px) {
	$diff-size: strip-unit($max-size - $min-size); //e.g. 13
	$diff-range: $upper-range - $lower-range;
	#{$property}: calc(#{$min-size} + #{$diff-size} * ((100vw - #{$lower-range}px) / #{$diff-range}));

	@include width-under($lower-range) {
		#{$property}: $min-size;
	}
	@include width-over($upper-range) {
		#{$property}: $max-size;
	}
}
